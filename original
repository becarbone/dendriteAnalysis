// Macro for Jessica Yasko
// 1st version Jan 9th 2015

//2nd ver Feb 5th 2015  create green and red subfolder to sabe srea.xls files

// ImageJ initialize
run("Colors...", "foreground=white background=black selection=yellow");
run("Options...", "iterations=1 count=1 black edm=Overwrite");
run("Set Measurements...", "area perimeter area_fraction limit redirect=None decimal=3");

//set raw result folder.   rawdir contains multiple subfolders, each subfolder contains multiple raw images
// each image is RGB format
// result folder should be empty.
rawdir=getDirectory("Choose Raw Data Folder");
resultdir=getDirectory("Choose Result Folder");
axondir=getDirectory("Choose AxonShow Folder");

//variable setup
var greenThreshold, redThreshold, areapercent, scale, minsize, maxsize, name, gcount, rcount, grcount, rgcount, axonlength, axonflag;
var greenstring, redstring;
// input parameter
parameterinput();

print("Raw_Folder:	"+rawdir);
print("Result_Folder:	"+resultdir);
print("GreenThreshold	RedThreshold	AreaPercent(%)	PixelScale(um/pixel)	Min_Puncta_Size	Max_Puncta_Size");
print(greenThreshold+"	"+redThreshold+"	"+areapercent+"	"+scale+"	"+minsize+"	"+maxsize);
print(" 	GreenPuncta#	RedPuncta#	GR#	RG#	AxonLength(um)	Density_R(um/#)	Density_G(um/#)");

folderlist=getFileList(rawdir);
for(d=0;d<folderlist.length;d++)
 {
  //create corresponding subfolder in result folder
  exec("cmd", "/c", "mkdir", resultdir+folderlist[d]);
  //create greenarea and redarea subfolder
  //exec("cmd", "/c", "mkdir", resultdir+folderlist[d]+"greenarea/");
  //exec("cmd", "/c", "mkdir", resultdir+folderlist[d]+"redarea/");
  
  filelist=getFileList(rawdir+folderlist[d]);
  print(folderlist[d]);

  greenstring="Filename	#	Area	Perim	%Area\n";
  redstring="Filename	#	Area	Perim	%Area\n";
  
  for(f=0;f<filelist.length;f++)
   {
   	// initialize :  open file, split channel, name by "red"/"green"/"axon"
    initialize();
    // create green red mask images and roi files
    mask("green"); 
    mask("red");
    // mask axon, and get length;
    axon();
    //measure
    measure();
   	
   }

  tmpname=substring(folderlist[d], 0, lengthOf(folderlist[d])-1);
  File.saveString(greenstring, resultdir+folderlist[d]+tmpname+"_GreenArea.xls"); 
  File.saveString(redstring, resultdir+folderlist[d]+tmpname+"_RedArea.xls");  	
 }

selectWindow("Log");
saveAs("Text", resultdir+"Summary.xls");
selectWindow("Log"); run("Close");
selectWindow("Results"); run("Close");
selectWindow("ROI Manager"); run("Close");


function measure()
 {
  if( gcount > 0 ) roiManager("Open", resultdir+folderlist[d]+name+"_green_ROI.zip");
  selectImage("red mask");
  run("Clear Results");
  roiManager("Measure");
  grcount=0;
  for(i=0;i<roiManager("Count");i++)
   if( getResult("%Area",i) >= areapercent ) grcount++;
  roiManager("reset"); run("Clear Results");
  
  if( rcount > 0 ) roiManager("Open", resultdir+folderlist[d]+name+"_red_ROI.zip");
  selectImage("green mask");
  run("Clear Results");
  roiManager("Measure");
  rgcount=0;
  for(i=0;i<roiManager("Count");i++)
   if( getResult("%Area",i) >= areapercent ) rgcount++;
  roiManager("reset"); run("Clear Results");

  //print(" 	GreenPuncta#	RedPuncta#	GR#	RG#	AxonLength(um)	Density_R(um/#)	Density_G(um/#)");
  print(filelist[f]+"	"+gcount+"	"+rcount+"	"+grcount+"	"+rgcount+"	"+axonlength+"	"+axonlength/rcount+"	"+axonlength/gcount);
 
  run("Close All"); 
 
 }

function mask(channel)
 {
  selectImage(channel);
  run("Gaussian Blur...", "sigma=1");
  
  if( channel == "green")
     setThreshold(greenThreshold, 255);
  if( channel == "red")
     setThreshold(redThreshold, 255);  
      
  run("Find Maxima...", "noise=10 output=[Segmented Particles] above");
  run("Analyze Particles...", "size="+minsize+"-"+maxsize+" pixel show=Masks add");
  
  selectWindow("Mask of "+channel+" Segmented");  run("Grays");
  saveAs("Tiff", resultdir+folderlist[d]+name+"_"+channel+"_mask.tif");
  run("Clear Results");
  roiManager("Measure");
  selectWindow("Results");
  
  if( channel == "green")
   {
    for(j=0;j<nResults;j++)
      greenstring=greenstring+filelist[f]+"	"+j+1+"	"+getResult("Area",j)+"	"+getResult("Perim.",j)+" 	"+getResult("%Area",j)+"\n";
   }
   
  if( channel == "red")
   {
    for(j=0;j<nResults;j++)
      redstring=redstring+filelist[f]+"	"+j+1+"	"+getResult("Area",j)+"	"+getResult("Perim.",j)+"	"+getResult("%Area",j)+"\n";
   }
  
  run("Clear Results");
  rename(channel+" mask");
  selectImage(channel); close();
  selectImage(channel+" Segmented"); close();

  if( channel == "green" )  gcount = roiManager("Count");
  if( channel == "red" )  rcount = roiManager("Count");
  
  if( roiManager("Count") > 0 )
    roiManager("Save", resultdir+folderlist[d]+name+"_"+channel+"_ROI.zip");
  roiManager("reset");
  
 }

function axon()
 {
  selectImage("axon");
  run("Subtract Background...", "rolling=10");
  run("Gaussian Blur...", "sigma=3");
  setAutoThreshold("Triangle dark");
  setOption("BlackBackground", true);
  run("Convert to Mask");
  run("Skeletonize");
  run("Analyze Particles...", "size=25-infinity pixel show=Nothing add");
  
  axonlength=0;
  if( roiManager("Count") > 0 )
   {
    roiManager("Save", resultdir+folderlist[d]+name+"_axon.zip");
    run("Clear Results");
    roiManager("Measure");
    
    for(i=0; i< roiManager("Count"); i++)
     axonlength= axonlength + getResult("Perim.",0) ;
    axonlength = axonlength/2;

    open(rawdir+folderlist[d]+filelist[f]);
    roiManager("Show All");
    run("Flatten");
    tmp= substring(folderlist[d], 0 , lengthOf(folderlist[d])-1 );
    saveAs("Jpeg", axondir+tmp+"_"+name+"_show.jpg");
    close(); close();
   }

  roiManager("reset"); 
  run("Clear Results");
 }


function initialize()
 {
  open(rawdir+folderlist[d]+filelist[f]);
  name=getInfo("image.filename");
  run("Properties...", "channels=1 slices=1 frames=1 unit=um pixel_width="+scale+" pixel_height=0.1705 voxel_depth=1");
  run("Split Channels");
  rename("axon");
  selectImage(name+" (green)"); rename("green");
  selectImage(name+" (red)"); rename("red");
 }
 	

function parameterinput()
 {
  Dialog.create("Parameter");
  Dialog.addNumber("Green Threshold:", 30);
  Dialog.addNumber("Red Threshold:", 30);
  Dialog.addNumber("Area Percent (%):", 50);
  Dialog.addNumber("Pixel Scale (um/pixel):", 0.1705);
  Dialog.addNumber("Min Punta Size (pixel):", 2);
  Dialog.addNumber("Max Punta Size (pixel):", 75);
  Dialog.show();
  greenThreshold = Dialog.getNumber();
  redThreshold = Dialog.getNumber();
  areapercent = Dialog.getNumber();  
  scale = Dialog.getNumber();  
  minsize = Dialog.getNumber();  
  maxsize = Dialog.getNumber();  
 }
